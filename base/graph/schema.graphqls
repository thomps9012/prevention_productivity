type User {
  id: ID
  first_name: String!
  last_name: String!
  email: String!
  username: String!
  password: String!
  is_admin: Boolean!
}

type Log {
  id: ID
  user_id: ID
  focus_area: String!
  actions: String!
  successes: String!
  improvements: String!
  next_steps: String!
  status: String!
  created_at: String!
  updated_at: String!
}

type Note {
  id: ID
  item_id: ID
  user_id: ID
  title: String!
  content: String!
  created_at: String!
  updated_at: String!
}

type Query {
  users: [User!]!
  user(id: ID!): User!
  logs: [Log!]!
}

input NewUser {
  first_name: String!
  last_name: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input RefreshTokenInput {
  token: String!
}

input NewLog {
  focus_area: String!
  actions: String!
  successes: String!
  improvements: String!
  next_steps: String!
}

input UpdateLog {
  focus_area: String!
  actions: String!
  successes: String!
  improvements: String!
  next_steps: String!
  status: String!
}

input NewNote {
  item_id: ID!
  title: String!
  content: String!
}

input UpdateNote {
  title: String!
  content: String!
}

type Mutation {
  createUser(newUser: NewUser!): String!
  login(login: LoginInput!): String!
  refreshToken(refreshToken: RefreshTokenInput!): String!
  createLog(newLog: NewLog!): Log!
  updateLog(id: ID!, updateLog: UpdateLog!): Log!
  createNote(newNote: NewNote!): Note!
  updateNote(id: ID!, updateNote: UpdateNote!): Note!
}
