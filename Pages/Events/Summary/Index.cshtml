@page
@model prevention_productivity.Pages.Events.Summary.IndexModel

@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
<p>
    <a asp-page="Create">Create New</a>
</p>
<p>
     <a asp-page="./Index">Back to Full List</a>    
</p>
<form class="searchRow">
    @if (User.IsInRole("Admin"))
    {
       <select class="searchBox" asp-for="TeamMemberSearch">
                <option value="">Select a Team Member</option>
           @foreach(var item in Model.TeamMembers)
                {
                    <option value="@item.Id">@item.FullName</option>
                }
            </select>
    }
       <select class="searchBox" asp-for="StatusSearch">
           <option value="">Filter by Status</option>
           <option value=@ApprovalStatus.Approved>Approved</option>
           <option value=@ApprovalStatus.Pending>Pending</option>
           <option value=@ApprovalStatus.Rejected>Rejected</option>
       </select>
       <button id="searchSubmit" type="submit" class="btn btn-primary">Search</button>
      
    </form>
<table class="table">
    <thead>
        <tr>
             <th>
                @Html.DisplayNameFor(model => model.EventSummary[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventSummary[0].Event)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventSummary[0].Attendees)
            </th>
            <th>
                Summary Creator
            </th>
           
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.EventSummary) {
        <tr>
             @switch(item.Status){
                 case ApprovalStatus.Pending:
                    <td id="pending">
                    @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    break;
                case ApprovalStatus.Approved:
                    <td id="approved">
                    @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    break;
                case ApprovalStatus.Rejected:
                    <td id="rejected">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    break;
             }
            <td>
                @Html.DisplayFor(modelItem => item.Event.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Attendees)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TeamMember.FullName)
            </td>
           
            <td>
                @if((await AuthorizationService.AuthorizeAsync(User, item, AuthOperations.Update)).Succeeded)
                {
                <a asp-page="./Edit" asp-route-id="@item.EventSummaryId">Edit</a>
                <text> | </text>
                }
                <a asp-page="./Details" asp-route-id="@item.EventSummaryId">Details</a>
                @if (User.IsInRole("Admin"))
                {
                <text> | </text>
                <a asp-page="./Delete" asp-route-id="@item.EventSummaryId">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
</body>
</html>
