@page
@model prevention_productivity.Pages.Events.Summary.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
</head>
<body>

<div>
    <h4>EventSummary</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EventSummary.Event)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EventSummary.Event.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EventSummary.Attendees)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EventSummary.Attendees)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EventSummary.Challenges)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EventSummary.Challenges)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EventSummary.Outcomes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EventSummary.Outcomes)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EventSummary.Notes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EventSummary.Notes)
        </dd>
        <dt class="col-sm-2">
           Next Steps
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EventSummary.NextSteps)
        </dd>
        <dt class="col-sm-2">
          Summary Creator
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EventSummary.TeamMember.FullName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EventSummary.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EventSummary.Status)
        </dd>
    </dl>
</div>
<div>
     @if(Model.EventSummary.Status != ApprovalStatus.Approved)
        {
                    @if((await AuthorizationService.AuthorizeAsync(User, Model.EventSummary, 
           AuthOperations.Approve)).Succeeded)
            {
                <form method="post" style="display:inline;">
                    <input type="hidden" name="id" value="@Model.EventSummary.EventSummaryId" />
                    <input type="hidden" name="status" value="@ApprovalStatus.Approved" />
                    <button class="btn btn-success" type="submit">Approve</button>
                </form>
            }
        }
        @if (Model.EventSummary.Status != ApprovalStatus.Rejected){
            @if((await AuthorizationService.AuthorizeAsync(User, Model.EventSummary,
           AuthOperations.Reject)).Succeeded)
            {
                <form method="post" style="display:inline;">
                    <input type="hidden" name="id" value="@Model.EventSummary.EventSummaryId" />
                    <input type="hidden" name="status" value="@ApprovalStatus.Rejected" />
                    <button class="btn btn-danger" type="submit">Reject</button>
                </form>
            }
        }
        <div>
            @if ((await AuthorizationService.AuthorizeAsync(User, Model.EventSummary,
            AuthOperations.Update)).Succeeded)
            {
            <a asp-page="./Edit" asp-route-id="@Model.EventSummary.EventSummaryId">Edit</a> 
            <text> | </text>    
            }
        </div>
    <a asp-page="../Details" asp-route-id="@Model.EventSummary.EventId">Back to Event Summary</a>
        <a asp-page="../Index" asp-route-id="@Model.EventSummary.EventId">All Events</a>
</div>
</body>
</html>
