@page
@model prevention_productivity.Pages.Events.DetailsModel

@{
   ViewData["Title"] = "Details";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
</head>
<body>

<div>
    <h4>Event</h4>
    <hr />
    <p>
    @if(Model.EventSummary != null)
            {   
            <a asp-page="./Summary/Details/" asp-route-id="@Model.EventSummary.EventSummaryId">View Event Summary</a>
            }
            else {
                <a asp-page="./Summary/Create">Create an Event Summary</a>
            }
</p>
       <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Location)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Location)
        </dd>
        <dt class="col-sm-2">
            Location Detail
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.LocationDetail)
        </dd>
        <dt class="col-sm-2">
          Grant
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.GrantProgram.Name)
        </dd>
        <dt class="col-sm-2">
           Open to the Public?
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.PublicEvent)
        </dd>
        <dt class="col-sm-2">
            RSVP Required?
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.RSVPRequired)
        </dd>
        <dt class="col-sm-2">
           Annual Event?
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.AnnualEvent)
        </dd>
        <dt class="col-sm-2">
         New Event?
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.NewEvent)
        </dd>
        <dt class="col-sm-2">
           Event Start
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.EventStart)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Duration)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Duration)
        </dd>
        <dt class="col-sm-2">
           Setup Time
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.SetUpTime)
        </dd>
        <dt class="col-sm-2">
        Cleanup Time
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.CleanUpTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Agenda)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Agenda)
        </dd>
        <dt class="col-sm-2">
     Target Population
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.TargetPopulation)
        </dd>
        <dt class="col-sm-2">
           Target Age Group
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.AgeGroup)
        </dd>
        <dt class="col-sm-2">
         Parting Gifts
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.PartingGift)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Raffle)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Raffle)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Marketing)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Marketing)
        </dd>
        <dt class="col-sm-2">
     Special Order Gear
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.SpecialOrderGear)
        </dd>
        <dt class="col-sm-2">
     Special Order Design Elements
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.SpecialOrderDesignElements)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Performance)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Performance)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Vendors)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Vendors)
        </dd>
        <dt class="col-sm-2">
      Food & Beverage Needs
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.FoodBeverage)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Caterer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Caterer)
        </dd>
        <dt class="col-sm-2">
          Head Count for Food
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.FoodHeadCount)
        </dd>
        <dt class="col-sm-2">
        Other Special Order Gear
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.OtherSpecialOrder)
        </dd>
        <dt class="col-sm-2">
         Prevention Team Members
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.PreventionTeamMembers)
        </dd>
        <dt class="col-sm-2">
Staff Time Commitment
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.StaffTimeCommitment)
        </dd>
        <dt class="col-sm-2">
         Staff Duties
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.StaffDuties)
        </dd>
        <dt class="col-sm-2">
    NORA Clients Attending
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.NORAClients)
        </dd>
        <dt class="col-sm-2">
  Volunteers Needed?
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Volunteers)
        </dd>
        <dt class="col-sm-2">
          List of Volunteers
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.VolunteerList)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Supplies)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Supplies)
        </dd>
        <dt class="col-sm-2">
       Total Budget
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.EventBudget)
        </dd>
        <dt class="col-sm-2">
Affiliated Organizations
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.EventAffiliates)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Notes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Notes)
        </dd>
        <dt class="col-sm-2">
       Event Lead
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.EventLead)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Event.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Event.Status)
        </dd>
    </dl>
</div>
<div>
        @if(Model.Event.Status != ApprovalStatus.Approved)
        {
                    @if((await AuthorizationService.AuthorizeAsync(User, Model.Event, 
           AuthOperations.Approve)).Succeeded)
            {
                <form method="post" style="display:inline;">
                    <input type="hidden" name="id" value="@Model.Event.Id" />
                    <input type="hidden" name="status" value="@ApprovalStatus.Approved" />
                    <button class="btn btn-success" type="submit">Approve</button>
                </form>
            }
        }
        @if (Model.Event.Status != ApprovalStatus.Rejected){
            @if((await AuthorizationService.AuthorizeAsync(User, Model.Event,
           AuthOperations.Reject)).Succeeded)
            {
                <form method="post" style="display:inline;">
                    <input type="hidden" name="id" value="@Model.Event.Id" />
                    <input type="hidden" name="status" value="@ApprovalStatus.Rejected" />
                    <button class="btn btn-danger" type="submit">Reject</button>
                </form>
            }
        }
        <div>
            @if ((await AuthorizationService.AuthorizeAsync(User, Model.Event,
            AuthOperations.Update)).Succeeded)
            {
            <a asp-page="./Edit" asp-route-id="@Model.Event.Id">Edit</a> 
            <text> | </text>    
            }
        </div>
    <a asp-page="./Index">Back to List</a>
</div>
</body>
</html>
