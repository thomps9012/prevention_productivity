type User {
  id: ID  
  first_name: String!
  last_name: String!
  email: String!
  username: String!
  password: String!
  admin: Boolean!
  created_at: String!
  updated_at: String!
  deleted_at: String
  active: Boolean!
}

type Contact {
  id: ID
  name: String
  email: String
  phone: String
  notes: String
  type: String
  active: Boolean!
  created_by: ID!
  created_at: String!
  updated_at: String!
  deleted_at: String!
}

type Grant {
  id: ID
  name: String!
  description: String!
  goals: [String]
  objectives: [String]
  start_date: String!
  award_date: String
  end_date: String!
  award_number: String!
  budget: Float
  active: Boolean!
  created_by: ID!
  created_at: String!
  updated_at: String!
}

type Note {
  id: ID
  item_id: ID
  user_id: ID
  title: String!
  content: String!
  created_at: String!
  updated_at: String!
}

type Log {
  id: ID
  user_id: ID
  daily_activity: String!
  positives: String!
  improvements: String!
  next_steps: String!
  status: String!
  created_at: String!
  updated_at: String!
}

type Event {
  id: ID
  event_lead: ID
  coplanners: [ID]
  title: String!
  description: String!
  start_date: String!
  set_up: String!
  clean_up: String!
  end_date: String!
  grant_id: ID!
  public: Boolean!
  rsvp: Boolean!
  annual_event: Boolean!
  new_event: Boolean!
  volunteers: Boolean!
  agenda: [String!]!
  target_audience: String!
  parting_gifts: [String!]!
  marketing_material: [String!]!
  supplies: [String!]!
  special_orders: [String]
  performance: String!
  vendors: String!
  food_and_beverage: [String!]!
  caterer: String!
  food_head_count: Int! 
  event_team: [String]
  volunteer_list: [String]
  budget: Float!
  affiliated_organization: String
  educational_goals: [String!]!
  educational_outcomes: [String!]!
  grant_goals: [String!]!
  created_at: String!
  updated_at: String!
  status: String!
}

type EventSummary {
  id: ID!
  event_id: ID!
  user_id: ID!
  coplanners: [ID]
  attendee_count: Int
  challenges: String!
  successes: String!
  improvements: String!
  status: String!
  created_at: String!
  updated_at: String!
}

type SchoolReportPlan {
  id: ID
  user_id: ID
  cofacilitators: [ID]
  curriculum: String!
  lesson_topics: String!
  school: String!
  status: String!
  created_at: String!
  updated_at: String!
}

type SchoolReportDebrief {
  id: ID!
  user_id: ID!
  lesson_plan_id: ID!
  student_count: Int
  student_list: [String!]
  challenges_improvements: String!
  positives: String!
  discussion: String!
  status: String!
  created_at: String!
  updated_at: String!
}

type LogWithNotes {
  log: Log!
  notes: [Note]
}

type EventWithNotes {
  event: Event!
  notes: [Note]
}

type EventSummaryWithNotes {
  event_summary: EventSummary!
  notes: [Note]
}

type SchoolReportPlanWithNotes {
  school_report_plan: SchoolReportPlan!
  notes: [Note]
}
type SchoolReportDebriefWithNotes {
  school_report_debrief: SchoolReportDebrief!
  notes: [Note]
}

type AllLogs {
  log: Log!
  user: User
  noteCount: Int
}

type AllEvents {
  event: Event!
  user: User
  coplanners: [User]
  noteCount: Int
}

type AllEventSummaries {
  event: Event!
  event_summary: EventSummary!
  user: User
  coplanners: [User]
  noteCount: Int
}

type AllSchoolReportPlans {
  school_report_plan: SchoolReportPlan!
  user: User
  cofacilitators: [User]
  noteCount: Int
}

type AllSchoolReportDebriefs {
  school_report_debrief: SchoolReportDebrief!
  user: User
  cofacilitators: [User]
  noteCount: Int
}

type ContactInfo {
  contact: Contact!
  contact_creator: User!
}

type Query {
  users: [User!]!
  me: User!
  user(id: ID!): User!
  itemNotes(item_id: ID!): [Note!]
  note(id: ID!): Note!
  log(id: ID!): LogWithNotes!
  allLogs: [AllLogs!]!
  userLogs(user_id: ID!): [Log!]!
  event(id: ID!): EventWithNotes!
  eventSummary(id: ID!): EventSummaryWithNotes!
  schoolReportPlan(id: ID!): SchoolReportPlanWithNotes!
  schoolReportDebrief(id: ID!): SchoolReportDebriefWithNotes!
  events: [AllEvents!]
  eventSummaries: [AllEventSummaries!]
  schoolReportPlans: [AllSchoolReportPlans!]
  schoolReportDebriefs: [AllSchoolReportDebriefs!]
  grants: [Grant!]
  grant(id: ID!): Grant!
  contacts: [Contact!]
  contactInfo(id: ID!): ContactInfo!
  userEvents(user_id: ID!): [Event!]
  userEventSummaries(user_id: ID!): [EventSummary!]
  userSchoolReportPlans(user_id: ID!): [SchoolReportPlan!]  
  userSchoolReportDebriefs(user_id: ID!): [SchoolReportDebrief!]  
  userNotes(user_id: ID!): [Note!]
}

input NewUser {
  first_name: String!
  last_name: String!
  email: String!
  password: String!
}

input UpdateUser {
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  admin: Boolean!
  active: Boolean!
}

input NewNote {
  item_id: ID!
  title: String!
  content: String!
}

input UpdateNote {
  title: String!
  content: String!
}

input LoginInput {
  email: String!
  password: String!
}

input RefreshTokenInput {
  token: String!
}

input NewLog {
  daily_activity: String!
  positives: String!
  improvements: String!
  next_steps: String!
}

input UpdateLog {
 daily_activity: String!
  positives: String!
  improvements: String!
  next_steps: String!
  status: String!
}

input NewEvent {
   coplanners: [ID]
  title: String
  description: String
  start_date: String
  set_up: String
  clean_up: String
  end_date: String
  grant_id: ID
  public: Boolean
  rsvp: Boolean
  annual_event: Boolean
  new_event: Boolean
  volunteers: Boolean
  agenda: [String]
  target_audience: String
  parting_gifts: [String]
  marketing_material: [String]
  supplies: [String]
  special_orders: [String]
  performance: String
  vendors: String
  food_and_beverage: [String]
  caterer: String
  food_head_count: Int
  event_team: [String]
  volunteer_list: [String]
  budget: Float
  affiliated_organization: String
  educational_goals: [String]
  educational_outcomes: [String]
  grant_goals: [String]
}

input UpdateEvent {
   coplanners: [ID]
  title: String
  description: String
  start_date: String
  set_up: String
  clean_up: String
  end_date: String
  grant_id: ID
  public: Boolean
  rsvp: Boolean
  annual_event: Boolean
  new_event: Boolean
  volunteers: Boolean
  agenda: [String]
  target_audience: String
  parting_gifts: [String]
  marketing_material: [String]
  supplies: [String]
  special_orders: [String]
  performance: String
  vendors: String
  food_and_beverage: [String]
  caterer: String
  food_head_count: Int
  event_team: [String]
  volunteer_list: [String]
  budget: Float
  affiliated_organization: String
  educational_goals: [String]
  educational_outcomes: [String]
  grant_goals: [String]
  status: String
}

input NewEventSummary {
  event_id: ID
  coplanners: [ID]
  attendee_count: Int
  challenges: String!
  successes: String!
  improvements: String!
}

input UpdateEventSummary {
  attendee_count: Int
  coplanners: [ID]
  challenges: String!
  successes: String!
  improvements: String!
  status: String
}

input NewSchoolReportPlan {
  cofacilitators: [ID]
  curriculum: String!
  lesson_topics: String!
  school: String!
}

input UpdateSchoolReportPlan {
  cofacilitators: [ID]
  curriculum: String!
  lesson_topics: String!
  school: String!
  status: String
}

input NewSchoolReportDebrief {
  lesson_plan_id: ID!
  student_count: Int
  student_list: [String!]
  challenges_improvements: String!
  positives: String!
  discussion: String!
}

input UpdateSchoolReportDebrief {
  lesson_plan_id: ID!
  student_count: Int
  student_list: [String!]
  challenges_improvements: String!
  positives: String!
  discussion: String!
  status: String
}

input NewGrant {
  name: String
  description: String
  goals: [String]
  objectives: [String]
  start_date: String
  end_date: String
  budget: Float
  award_number: String
  award_date: String
}

input UpdateGrant {
  name: String
  description: String
  goals: [String]
  objectives: [String]
  start_date: String
  end_date: String
  budget: Float
  award_number: String
  award_date: String
  active: Boolean
}

input NewContact {
  name: String
  type: String
  email: String
  phone: String
  notes: String
}

input UpdateContact {
  name: String
  type: String
  email: String
  phone: String
  notes: String
}


type Mutation {
  createUser(newUser: NewUser!): String!
  updateUser(updateUser: UpdateUser!, id: ID!): User!
  deleteUser(id: ID!): Boolean!
  login(login: LoginInput!): String!
  refreshToken(refreshToken: RefreshTokenInput!): String!
  createGrant(newGrant: NewGrant!): Grant
  updateGrant(id: ID!, updateGrant: UpdateGrant!): Grant
  removeGrant(id: ID!): Boolean
  createContact(newContact: NewContact!): Contact
  updateContact(id: ID!, updateContact: UpdateContact!): Contact
  removeContact(id: ID!): Boolean
  createNote(newNote: NewNote!): Note!
  updateNote(id: ID!, updateNote: UpdateNote!): Note!
  removeNote(id: ID!): Boolean!
  createLog(newLog: NewLog!): Log!
  updateLog(id: ID!, updateLog: UpdateLog!): Log!
  removeLog(id: ID!): Boolean!
  approveLog(id: ID!): Boolean!
  rejectLog(id: ID!): Boolean!
  createEvent(newEvent: NewEvent!): Event!
  updateEvent(id: ID!, updateEvent: UpdateEvent!): Event!
  removeEvent(id: ID!): Boolean
  approveEvent(id: ID!): Boolean
  rejectEvent(id: ID!): Boolean
  createEventSummary(newEventSummary: NewEventSummary!): EventSummary
  updateEventSummary(id: ID!, updateEventSummary: UpdateEventSummary!): EventSummary
  removeEventSummary(id: ID!): Boolean
  approveEventSummary(id: ID!): Boolean
  rejectEventSummary(id: ID!): Boolean
  createSchoolReportPlan(newSchoolReportPlan: NewSchoolReportPlan!): SchoolReportPlan
  updateSchoolReportPlan(id: ID!, updateSchoolReportPlan: UpdateSchoolReportPlan!): SchoolReportPlan
  removeSchoolReportPlan(id: ID!): Boolean
  approveSchoolReportPlan(id: ID!): Boolean
  rejectSchoolReportPlan(id: ID!): Boolean
  createSchoolReportDebrief(newSchoolReportDebrief: NewSchoolReportDebrief!): SchoolReportDebrief
  updateSchoolReportDebrief(id: ID!, updateSchoolReportDebrief: UpdateSchoolReportDebrief!): SchoolReportDebrief
  removeSchoolReportDebrief(id: ID!): Boolean
  approveSchoolReportDebrief(id: ID!): Boolean
  rejectSchoolReportDebrief(id: ID!): Boolean
}
